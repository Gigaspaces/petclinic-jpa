<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:os-core="http://openspaces.gigaspaces.org/schema/core"
       xmlns:os-events="http://openspaces.gigaspaces.org/schema/events"
       xmlns:os-remoting="http://openspaces.gigaspaces.org/schema/remoting"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://openspaces.gigaspaces.org/schema/core http://openspaces.gigaspaces.org/schema/core/openspaces-core.xsd
       http://openspaces.gigaspaces.org/schema/events http://openspaces.gigaspaces.org/schema/events/openspaces-events.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://openspaces.gigaspaces.org/schema/remoting http://openspaces.gigaspaces.org/schema/remoting/openspaces-remoting.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--
        Spring property configurer which allows us to use system properties (such as user.name).
    -->
    <bean id="propertiesConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"/>


    <!--
        A bean representing a space (an IJSpace implementation).

        Note, we do not specify here the cluster topology of the space. It is declated outside of
        the processing unit or within the SLA bean.

        The space is configured to connect to a mirror, and uses the configured external data source
        to perform the initial load operation from the database when the Space starts up.
    -->
    <os-core:space id="space" url="/./petclinic" lookup-groups="${user.name}"/>

    <os-core:giga-space id="gigaSpace" space="space"/>

    <!-- entity manager factory definition -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="gigaspaces"/>
		<property name="jpaVendorAdapter">
			<bean class="org.openspaces.jpa.OpenSpacesJpaVendorAdapter">
				<property name="space" value="#{gigaSpace.space}"/>
			</bean>
		</property>
	</bean>

        <!-- transaction manager definition -->
	<bean id="jpaTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

        <!-- support annotations -->
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	<context:annotation-config/>
	<tx:annotation-driven transaction-manager="jpaTransactionManager"/>

    <bean id="idObjectInitializer" class="com.gigaspaces.petclinic.processor.IdObjectInitializer"/>


    <bean id="clinicService" class="com.gigaspaces.petclinic.processor.PetClinicService"/>

    <!-- Support the @RemotingService annotation on a service-->
    <os-remoting:annotation-support/>

    <os-remoting:service-exporter id="serviceExporter"/>
</beans>